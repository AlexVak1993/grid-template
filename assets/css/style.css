/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0;
}

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block;
}

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px;
}

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
     * Add the correct display in IE.
     */
main {
  display: block;
}

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit;
}

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder;
}

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic;
}

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000;
}

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%;
}

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block;
}

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none;
}

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible;
}

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible;
}

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */
}

[type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */
}

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto;
}

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block;
}

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item;
}

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block;
}

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block;
}

/**
     * Add the correct display in IE.
     */
template {
  display: none;
}

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none;
}

/* ul */
/* xl */
/* lg */
/* md */
/* sm */
/* xs */
/* xx */
.btn, .btn-accent {
  display: block;
  padding: 18px 20px;
  -webkit-transition: background-color 0.5s;
  -o-transition: background-color 0.5s;
  transition: background-color 0.5s;
  text-align: center;
  height: 60px;
  font-family: "Roboto", sans-serif;
}

.btn:hover, .btn-accent:hover {
  background-color: #d66926;
}

.header-menu__container, .header-content__container, .about__container, .form__container, .posts__container {
  max-width: 1300px;
  margin: auto;
}

.form__input, .form__input--accent {
  height: 60px;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  color: #ffffff;
  background-color: rgba(255, 255, 255, 0.05);
  font-family: "Roboto", sans-serif;
  border: none;
  border-bottom: 2px solid rgba(255, 255, 255, 0.1);
  outline: none;
}

.form__input--accent:focus, .form__input:focus {
  background-color: rgba(255, 255, 255, 0.15);
  border: 2px solid rgba(255, 255, 255, 0.1);
  border-bottom: 2px solid #ffffff;
}

.footer__social, .footer__copyright {
  margin: 0 auto;
  text-align: center;
}

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html {
  font-size: 16px;
  font-family: "Roboto", sans-serif;
  letter-spacing: 0.1em;
  overflow-y: scroll;
  color: #637588;
}

h1 {
  font-family: "Roboto Slab", serif;
  font-weight: 300;
}

a {
  text-decoration: none;
  color: #ffffff;
}

a:visited {
  color: #ffffff;
}

.btn {
  background-color: rgba(255, 255, 255, 0.1);
  border: 2px solid #ffffff;
  min-width: 250px;
  padding-top: 18px;
}

.btn-accent {
  background-color: rgba(45, 54, 81, 0.8);
  border: 2px solid #2d3651;
  font-size: 1.125rem;
  letter-spacing: 0.1em;
}

.header {
  position: relative;
  color: #ffffff;
  background-image: url(../img/img-header.png);
  background-size: cover;
  background-position: 50% 50%;
  display: grid;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.header-overlay {
  background-color: #2d3651;
  opacity: 0.8;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.header-menu {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 1;
}

.header-menu__container {
  display: grid;
  grid-template-columns: auto 1fr;
  padding-right: 5px;
}

.header-logo {
  -ms-flex-item-align: center;
      align-self: center;
  font-size: 1.5rem;
  letter-spacing: 0.03em;
  font-size: 1.5rem;
  letter-spacing: 0.3rem;
}

.header-logo__link {
  padding-top: 36px;
  display: block;
}

.header-logo__accent {
  padding-top: 12px;
  padding-right: 2px;
  padding-bottom: 14px;
  padding-left: 3px;
  border: 2px solid #d53d27;
  margin-right: 5px;
}

.header-navbar {
  display: grid;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  justify-items: end;
  position: relative;
}

.header-navbar__hamburger {
  width: 30px;
  height: 22.5px;
  position: relative;
  margin: 25px 0;
  -webkit-transform: rotate(0deg);
      -ms-transform: rotate(0deg);
          transform: rotate(0deg);
  -webkit-transition: 0.5s ease-in-out;
  -o-transition: 0.5s ease-in-out;
  transition: 0.5s ease-in-out;
  cursor: pointer;
}

.header-navbar__hamburger span {
  display: block;
  position: absolute;
  height: 4.5px;
  width: 50%;
  background: #ffffff;
  opacity: 1;
  -webkit-transform: rotate(0deg);
      -ms-transform: rotate(0deg);
          transform: rotate(0deg);
  -webkit-transition: 0.25s ease-in-out;
  -o-transition: 0.25s ease-in-out;
  transition: 0.25s ease-in-out;
}

.header-navbar__hamburger span:nth-child(even) {
  left: 50%;
  border-radius: 0 4.5px 4.5px 0;
}

.header-navbar__hamburger span:nth-child(odd) {
  left: 0px;
  border-radius: 4.5px 0 0 4.5px;
}

.header-navbar__hamburger span:nth-child(1), .header-navbar__hamburger span:nth-child(2) {
  top: 0px;
}

.header-navbar__hamburger span:nth-child(3), .header-navbar__hamburger span:nth-child(4) {
  top: 9px;
}

.header-navbar__hamburger span:nth-child(5), .header-navbar__hamburger span:nth-child(6) {
  top: 18px;
}

.header-navbar__hamburger.open span:nth-child(1), .header-navbar__hamburger.open span:nth-child(6) {
  -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
          transform: rotate(45deg);
}

.header-navbar__hamburger.open span:nth-child(2), .header-navbar__hamburger.open span:nth-child(5) {
  -webkit-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
          transform: rotate(-45deg);
}

.header-navbar__hamburger.open span:nth-child(1) {
  left: 2.5px;
  top: 3.5px;
}

.header-navbar__hamburger.open span:nth-child(2) {
  left: calc(50% - 2.5px);
  top: 3.5px;
}

.header-navbar__hamburger.open span:nth-child(3) {
  left: -50%;
  opacity: 0;
}

.header-navbar__hamburger.open span:nth-child(4) {
  left: 100%;
  opacity: 0;
}

.header-navbar__hamburger.open span:nth-child(5) {
  left: 2.5px;
  top: 14.5px;
}

.header-navbar__hamburger.open span:nth-child(6) {
  left: calc(50% - 2.5px);
  top: 14.5px;
}

.header-navbar__list {
  list-style: none;
  margin: 0;
  padding: 0;
}

.header-navbar__list.open {
  display: block;
}

.header-navbar__link {
  display: block;
  font-size: 1.25rem;
  letter-spacing: 0.025em;
  padding-top: 37px;
  padding-left: 40px;
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
}

.header-navbar__link:hover {
  color: #d66926;
}

.header-content {
  position: relative;
}

.header-content__title {
  text-align: center;
  padding-right: 15px;
}

.header-content__buttons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  font-size: 1.2rem;
  letter-spacing: 0.075em;
  padding-top: 14px;
}

.skills__container {
  display: grid;
}

.skills__button {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding-top: 20px;
}

.skill-item {
  position: relative;
  background-color: #2d3651;
  overflow: hidden;
}

.skill-item:nth-of-type(1) {
  grid-area: a1;
}

.skill-item:nth-of-type(2) {
  grid-area: a2;
}

.skill-item:nth-of-type(3) {
  grid-area: a3;
}

.skill-item:nth-of-type(4) {
  grid-area: a4;
}

.skill-item:nth-of-type(5) {
  grid-area: a5;
}

.skill-item:nth-of-type(6) {
  grid-area: a6;
}

.skill-item:nth-of-type(7) {
  grid-area: a7;
}

.skill-item:nth-of-type(8) {
  grid-area: a8;
}

.skill-item:nth-of-type(9) {
  grid-area: a9;
}

.skill-item__overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #2d3651;
  opacity: 0.8;
  z-index: 1;
  -webkit-transition: opacity 0.5s;
  -o-transition: opacity 0.5s;
  transition: opacity 0.5s;
}

.skill-item__image {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-position: 50% 50%;
  background-size: cover;
  -webkit-transition: -webkit-transform 0.5s;
  transition: -webkit-transform 0.5s;
  -o-transition: transform 0.5s;
  transition: transform 0.5s;
  transition: transform 0.5s, -webkit-transform 0.5s;
}

.skill-item__tittle {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 2;
  margin: 0;
}

.skill-item__link {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding: 20px;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 100%;
  height: 100%;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
  letter-spacing: 0.1em;
}

.skill-item:hover .skill-item__overlay {
  opacity: 0.95 !important;
}

.skill-item:hover .skill-item__image {
  -webkit-transform: scale(1.1);
      -ms-transform: scale(1.1);
          transform: scale(1.1);
}

.skill-item:hover .skill-item__link {
  color: #d66926;
}

.about {
  position: relative;
}

.about__overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #e5e5e5;
  z-index: -1;
}

.about__container {
  display: grid;
  position: relative;
}

.about__content {
  display: grid;
  position: relative;
}

.about__content::after {
  position: absolute;
  height: 200px;
  background-color: #bababa;
  width: 2px;
  content: "";
}

.about__content h2 {
  font-style: "Roboto Slab", serif;
  color: #2d3651;
}

.about__content p {
  margin-bottom: 0px;
}

.about__image {
  display: grid;
}

.form {
  background-color: #2d3651;
}

.form__container {
  height: 100%;
  display: grid;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.form__input::-webkit-input-placeholder {
  color: #ffffff;
}

.form__input::-moz-placeholder {
  color: #ffffff;
}

.form__input:-ms-input-placeholder {
  color: #ffffff;
}

.form__input::-ms-input-placeholder {
  color: #ffffff;
}

.form__input::placeholder {
  color: #ffffff;
}

.form__input--accent::-webkit-input-placeholder {
  color: rgba(255, 255, 255, 0.5);
}

.form__input--accent::-moz-placeholder {
  color: rgba(255, 255, 255, 0.5);
}

.form__input--accent:-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.5);
}

.form__input--accent::-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.5);
}

.form__input--accent::placeholder {
  color: rgba(255, 255, 255, 0.5);
}

.form__btn {
  border: none;
  border-bottom: 2px solid rgba(255, 255, 255, 0.25);
  color: #ffffff;
  font-size: 1.25rem;
  letter-spacing: 0.05em;
}

.posts__tittle {
  font-family: "Roboto Slab", serif;
  color: #2d3651;
  letter-spacing: 0.1em;
}

.posts-item {
  background-color: #ededed;
  position: relative;
  height: 550px;
  -webkit-transition: 0.5s;
  -o-transition: 0.5s;
  transition: 0.5s;
}

.posts-item--wrapper {
  display: grid;
  grid-gap: 20px;
}

.posts-item:nth-of-type(1) {
  grid-area: b1;
}

.posts-item:nth-of-type(2) {
  grid-area: b2;
}

.posts-item:nth-of-type(3) {
  grid-area: b3;
}

.posts-item:nth-of-type(4) {
  grid-area: b4;
}

.posts-item:nth-of-type(5) {
  grid-area: b5;
}

.posts-item:nth-of-type(6) {
  grid-area: b6;
}

.posts-item:hover {
  background-color: #cccccc;
}

.posts-item__image {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 45.5%;
  background-position: 50% 50%;
  background-size: cover;
}

.posts-item__info {
  position: absolute;
  top: 55.5%;
  left: 0;
  right: 0;
  bottom: 0;
  height: 250px;
  display: grid;
  -ms-flex-line-pack: center;
      align-content: center;
  padding: 20px;
}

.posts-item__tittle {
  text-align: center;
  font-family: "Roboto Slab", serif;
  font-size: 1.125rem;
  letter-spacing: 0.05em;
}

.posts-item__caption {
  text-align: center;
  letter-spacing: 0;
}

.posts__button {
  margin: 0 auto;
  padding-top: 20px;
}

.footer {
  height: 250px;
  background-color: #2d3651;
  display: grid;
  -ms-flex-line-pack: center;
      align-content: center;
  position: relative;
}

.footer__social {
  font-size: 2.5rem;
}

.footer__social a {
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
}

.footer__social a:hover {
  color: #d66926;
}

.footer__social::after {
  position: absolute;
  height: 2px;
  width: 75px;
  background-color: #44596e;
  content: "";
}

.footer__copyright {
  padding-bottom: 20px;
}

.footer__copyright span {
  font-weight: 300;
  letter-spacing: 0.3em;
}

.footer__copyright span:nth-of-type(2) {
  font-weight: 900;
  color: #ffffff;
  letter-spacing: 0.05em;
}

@media (min-width: 576px) {
  .btn-accent {
    min-width: 350px;
  }
  .header-content__buttons .btn:first-of-type {
    margin-right: 20px;
  }
  .skills {
    padding: 10px 10px 40px 10px;
  }
}

@media (min-width: 768px) {
  .header-navbar__hamburger {
    display: none;
  }
  .header-navbar__list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(50px, -webkit-max-content));
    grid-template-columns: repeat(auto-fit, minmax(50px, max-content));
    width: 100%;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: end;
  }
  .skill-item__link {
    font-size: 1.25rem;
  }
  .about__content p {
    font-size: 1.125rem;
    letter-spacing: 0.005em;
    line-height: 1.3;
  }
}

@media (min-width: 992px) {
  h1 {
    font-size: 3.75rem;
    letter-spacing: 0.075em;
  }
  .header {
    min-height: 100vh;
  }
  .header-content__container {
    padding-bottom: 40px;
  }
  .skills__container {
    grid-template-columns: repeat(4, 1fr);
    grid-template-areas: "a1 a1 a2 a3" "a4 a5 a5 a6" "a7 a8 a9 a6";
    grid-gap: 10px;
  }
  .skill-item {
    min-height: calc(33.33vh - 10px);
  }
  .about {
    min-height: 652px;
  }
  .about__container {
    grid-template-columns: 1fr 271px;
    grid-gap: 100px;
  }
  .about__content {
    padding-top: 69px;
  }
  .about__content::after {
    top: 243px;
    right: -53px;
  }
  .about__content h2 {
    font-size: 2.5rem;
    letter-spacing: 0.125em;
  }
  .about__image {
    padding-top: 100px;
  }
  .form {
    height: 120px;
  }
  .form__container {
    grid-template-columns: repeat(3, calc(33.3% - 15px));
    grid-gap: 20px;
  }
  .form__input {
    margin-left: -5px;
    font-size: 1.25rem;
    letter-spacing: 0.05em;
    padding-left: 30px;
  }
  .form__input--accent {
    font-size: 1.25rem;
    letter-spacing: 0.05em;
    padding-left: 30px;
    margin-left: -5px;
  }
  .posts__tittle {
    padding-top: 60px;
    padding-bottom: 20px;
    font-size: 2.5rem;
  }
  .posts-item--wrapper {
    grid-template-columns: repeat(4, 1fr);
    grid-template-areas: "b1 b1 b2 b3" "b4 b5 b6 b6";
  }
  .posts__button {
    max-width: 350px;
    padding-bottom: 100px;
  }
  .footer__social::after {
    top: 46%;
    left: 48%;
  }
  .footer__copyright {
    padding-top: 60px;
  }
}

@media (max-width: 991.8px) {
  .header-menu {
    padding-right: 10px;
  }
  .header-logo {
    padding-left: 24px;
  }
  .skill-item {
    min-height: 350px;
  }
}

@media (max-width: 991.8px) and (min-width: 768px) {
  h1 {
    font-size: 2.5rem;
    letter-spacing: 0.08em;
  }
  .btn {
    font-size: 1rem;
    min-width: 200px;
    height: 50px;
    padding: 16px 20px;
  }
  .btn-accent {
    height: 66px;
    padding-top: 22px;
  }
  .header {
    min-height: 766px;
  }
  .header-navbar__link {
    padding-top: 33px;
    padding-left: 41px;
  }
  .header-content__container {
    padding-bottom: 20px;
    padding-left: 12px;
  }
  .header-content__buttons {
    padding-top: 15px;
    padding-right: 10px;
  }
  .skills__container {
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas: "a1 a1 a2" "a3 a4 a4" "a5 a5 a6" "a7 a8 a6" "a7 a9 a9";
    grid-gap: 10px;
  }
  .about {
    max-height: 563px;
  }
  .about__container {
    grid-template-columns: 1fr 255px;
    grid-gap: 60px;
    padding-right: 30px;
  }
  .about__content {
    padding-top: 55px;
    padding-left: 20px;
  }
  .about__content--caption {
    max-height: 315px;
    max-width: 630px;
    margin-bottom: 70px;
    overflow: scroll;
  }
  .about__content::after {
    top: 182px;
    right: -26px;
  }
  .about__content h2 {
    font-size: 2rem;
    letter-spacing: 0.125em;
    margin-bottom: 22px;
  }
  .about__image {
    -webkit-transform: scale(0.95);
        -ms-transform: scale(0.95);
            transform: scale(0.95);
    padding-top: 69px;
  }
  .form {
    height: 100px;
  }
  .form__container {
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 20px;
    padding: 0 20px;
  }
  .form__input {
    font-size: 1rem;
    letter-spacing: 0.1em;
    padding-bottom: 3px;
    padding-left: 22px;
  }
  .form__input--accent {
    font-size: 1rem;
    letter-spacing: 0.1em;
    padding-bottom: 6px;
    padding-left: 23px;
  }
  .form__btn {
    height: 60px;
    padding-left: 25px;
    letter-spacing: 0.1em;
  }
  .posts__tittle {
    padding-top: 48px;
    padding-bottom: 13px;
    padding-left: 20px;
    font-size: 2rem;
  }
  .posts-item--wrapper {
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas: "b1 b1 b2" "b3 b4 b4" "b5 b5 b6";
    padding: 0 20px;
  }
  .posts__button {
    max-width: 350px;
    padding-bottom: 80px;
  }
  .posts__button a {
    height: 60px;
    padding-top: 18px;
    padding-right: 16px;
  }
  .footer__social::after {
    top: 45%;
    left: 46.3%;
  }
  .footer__copyright {
    padding-top: 50px;
    padding-left: 5px;
  }
}

@media (max-width: 767.8px) {
  h1 {
    font-size: 1.875rem;
    letter-spacing: 0.075em;
  }
  .btn {
    font-size: 1rem;
    min-width: 170px;
    height: 40px;
    padding: 9px 20px;
  }
  .header-menu {
    background-color: rgba(68, 89, 110, 0.25);
  }
  .header-logo__link {
    padding-top: 5px;
  }
  .header-navbar__hamburger {
    display: block;
    margin: 37px 3px;
  }
  .header-navbar__list {
    display: none;
    position: absolute;
    top: 0;
    right: 40px;
    background-color: rgba(68, 89, 110, 0.9);
    text-align: right;
    padding-bottom: 10px;
    width: 140px;
  }
  .header-navbar__link {
    padding-right: 20px;
  }
  .skill-item__link {
    font-size: 1.125rem;
  }
}

@media (max-width: 767.8px) and (min-width: 576px) {
  .header {
    min-height: 560px;
  }
  .header-content__container {
    padding-bottom: 16px;
    padding-left: 13px;
  }
  .header-content__buttons {
    padding-top: 10px;
    padding-right: 13px;
    font-size: 1rem;
  }
  .skills__container {
    grid-template-columns: repeat(2, 1fr);
    grid-template-areas: "a1 a2" "a3 a2" "a4 a4" "a5 a6" "a5 a7" "a8 a9";
    grid-gap: 10px;
  }
  .skills__button {
    padding-left: 12px;
  }
  .skill-item:nth-of-type(5) {
    min-height: 720px;
  }
  .skill-item:nth-of-type(7) {
    min-height: 360px;
  }
  .about {
    max-height: 479px;
  }
  .about__container {
    grid-template-columns: 1fr 236px;
    grid-gap: 60px;
    padding-right: 40px;
  }
  .about__content {
    padding-top: 43px;
    padding-left: 23px;
    line-height: 1.25;
  }
  .about__content--caption {
    max-height: 275px;
    max-width: 414px;
    margin-bottom: 76px;
    overflow: scroll;
  }
  .about__content::after {
    top: 152px;
    right: -18px;
  }
  .about__content h2 {
    font-size: 1.5rem;
    letter-spacing: 0.125em;
    margin-bottom: 0;
  }
  .about__content p {
    font-size: 1.075rem;
    letter-spacing: 0.0125em;
    line-height: 1.4;
  }
  .about__image {
    -webkit-transform: scale(0.85);
        -ms-transform: scale(0.85);
            transform: scale(0.85);
    padding-top: 5px;
  }
  .form {
    height: 182px;
  }
  .form__container {
    grid-template-columns: 1fr 1fr;
    grid-gap: 20px;
    padding: 20px;
  }
  .form__input {
    grid-column: 1 / span 2;
    font-size: 1.125rem;
    letter-spacing: 0.1em;
    padding-left: 23px;
  }
  .form__input--accent {
    font-size: 1.125rem;
    letter-spacing: 0.1em;
    padding-left: 22px;
  }
  .form__btn {
    font-size: 1.125rem;
    letter-spacing: 0.1em;
    height: 60px;
    padding-left: 25px;
    width: 352px;
  }
  .posts__tittle {
    padding-top: 36px;
    padding-bottom: 9px;
    padding-left: 20px;
    font-size: 1.5rem;
  }
  .posts-item--wrapper {
    grid-template-columns: repeat(2, 1fr);
    grid-template-areas: "b1 b2" "b3 b4" "b5 b6";
    padding: 0 20px;
  }
  .posts__button {
    max-width: 350px;
    padding-bottom: 60px;
  }
  .footer__social::after {
    top: 48%;
    left: 45.1%;
  }
  .footer__copyright {
    padding-top: 68px;
    padding-left: 5px;
  }
}

@media (max-width: 575.8px) {
  .btn {
    padding: 9px 20px;
  }
  .btn-accent {
    width: 100%;
  }
  .header {
    min-height: 992px;
  }
  .header-content__container {
    padding-bottom: 20px;
    padding-left: 25px;
    line-height: 1.3;
  }
  .header-content__buttons {
    padding-top: 17px;
    padding-right: 23px;
  }
  .header-content__buttons .btn:first-of-type {
    margin-right: 20px;
  }
  .skills {
    padding: 20px;
  }
  .skills__container {
    grid-template-columns: 1fr;
    grid-template-areas: "a1" "a2" "a3" "a4" "a5" "a6" "a7" "a8" "a9";
    grid-gap: 20px;
  }
  .about__container {
    padding-left: 20px;
  }
  .about__content {
    padding-top: 62px;
  }
  .about__content--caption {
    max-height: 315px;
    max-width: 532px;
    margin-bottom: 57px;
    overflow: scroll;
  }
  .about__content::after {
    display: none;
  }
  .about__content h2 {
    text-align: center;
    letter-spacing: 0.125em;
    line-height: 1.25;
    margin: 0 auto;
    padding-right: 12px;
    margin-bottom: 10px;
  }
  .about__content p {
    line-height: 1.5;
  }
  .about__image {
    width: 270px;
    padding-bottom: 67px;
    padding-left: 145px;
  }
  .form {
    height: 262px;
  }
  .form__input {
    font-size: 1.125rem;
    letter-spacing: 0.1em;
    padding-top: 10px;
    padding-left: 22px;
    margin-top: 6px;
    margin-right: 20px;
    margin-bottom: 0;
    margin-left: 20px;
  }
  .form__input--accent {
    font-size: 1.125rem;
    letter-spacing: 0.1em;
    padding-left: 22px;
    margin-top: 6px;
    margin-right: 20px;
    margin-bottom: 0;
    margin-left: 20px;
  }
  .form__btn {
    font-size: 1.125rem;
    letter-spacing: 0.1em;
    margin-top: 0;
    margin-right: 20px;
    margin-bottom: 12px;
    margin-left: 20px;
    height: 60px;
    padding-left: 25px;
  }
  .posts__tittle {
    padding-top: 34px;
    padding-bottom: 9px;
    text-align: center;
    font-size: 1.5rem;
  }
  .posts-item--wrapper {
    grid-template-columns: 1fr;
    grid-template-areas: "b1" "b2" "b3" "b4" "b5" "b6";
    padding: 0 20px;
  }
  .posts__button {
    padding-bottom: 60px;
    padding-top: 20px;
    padding-right: 20px;
    padding-bottom: 60px;
    padding-left: 20px;
    display: grid;
    grid-template-columns: 1fr;
  }
  .footer__social::after {
    top: 50%;
    left: 43.5%;
  }
  .footer__copyright {
    padding-top: 76px;
    padding-left: 5px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
